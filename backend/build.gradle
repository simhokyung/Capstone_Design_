plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5' // ✅ Spring Boot 버전 다운그레이드
	id 'io.spring.dependency-management' version '1.1.4' // ✅ 버전 맞춤
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ✅ Spring 기본
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ MySQL
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'

	// ✅ WebClient용 WebFlux 최소 의존성
	implementation 'org.springframework:spring-webflux'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

	// ✅ 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
	testImplementation 'org.mockito:mockito-core:5.6.0'

	// ✅ Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0' // 안정 버전으로 낮춤
}

tasks.named('test') {
	useJUnitPlatform()
}
